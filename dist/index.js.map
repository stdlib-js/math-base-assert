{
  "version": 3,
  "sources": ["../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name isEvenInt32\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/int32-is-even}\n*/\nsetReadOnly( ns, 'isEvenInt32', require( '@stdlib/math-base-assert-int32-is-even' ) );\n\n/**\n* @name isOddInt32\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/int32-is-odd}\n*/\nsetReadOnly( ns, 'isOddInt32', require( '@stdlib/math-base-assert-int32-is-odd' ) );\n\n/**\n* @name isComposite\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-composite}\n*/\nsetReadOnly( ns, 'isComposite', require( '@stdlib/math-base-assert-is-composite' ) );\n\n/**\n* @name isCoprime\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-coprime}\n*/\nsetReadOnly( ns, 'isCoprime', require( '@stdlib/math-base-assert-is-coprime' ) );\n\n/**\n* @name isEven\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-even}\n*/\nsetReadOnly( ns, 'isEven', require( '@stdlib/math-base-assert-is-even' ) );\n\n/**\n* @name isEvenf\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-evenf}\n*/\nsetReadOnly( ns, 'isEvenf', require( '@stdlib/math-base-assert-is-evenf' ) );\n\n/**\n* @name isFinite\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-finite}\n*/\nsetReadOnly( ns, 'isFinite', require( '@stdlib/math-base-assert-is-finite' ) );\n\n/**\n* @name isFinitef\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-finitef}\n*/\nsetReadOnly( ns, 'isFinitef', require( '@stdlib/math-base-assert-is-finitef' ) );\n\n/**\n* @name isInfinite\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-infinite}\n*/\nsetReadOnly( ns, 'isInfinite', require( '@stdlib/math-base-assert-is-infinite' ) );\n\n/**\n* @name isInfinitef\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-infinitef}\n*/\nsetReadOnly( ns, 'isInfinitef', require( '@stdlib/math-base-assert-is-infinitef' ) );\n\n/**\n* @name isInteger\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-integer}\n*/\nsetReadOnly( ns, 'isInteger', require( '@stdlib/math-base-assert-is-integer' ) );\n\n/**\n* @name isIntegerf\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-integerf}\n*/\nsetReadOnly( ns, 'isIntegerf', require( '@stdlib/math-base-assert-is-integerf' ) );\n\n/**\n* @name isnan\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-nan}\n*/\nsetReadOnly( ns, 'isnan', require( '@stdlib/math-base-assert-is-nan' ) );\n\n/**\n* @name isnanf\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-nanf}\n*/\nsetReadOnly( ns, 'isnanf', require( '@stdlib/math-base-assert-is-nanf' ) );\n\n/**\n* @name isNegativeFinite\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-negative-finite}\n*/\nsetReadOnly( ns, 'isNegativeFinite', require( '@stdlib/math-base-assert-is-negative-finite' ) );\n\n/**\n* @name isNegativeInteger\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-negative-integer}\n*/\nsetReadOnly( ns, 'isNegativeInteger', require( '@stdlib/math-base-assert-is-negative-integer' ) );\n\n/**\n* @name isNegativeIntegerf\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-negative-integerf}\n*/\nsetReadOnly( ns, 'isNegativeIntegerf', require( '@stdlib/math-base-assert-is-negative-integerf' ) );\n\n/**\n* @name isNegativeZero\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-negative-zero}\n*/\nsetReadOnly( ns, 'isNegativeZero', require( '@stdlib/math-base-assert-is-negative-zero' ) );\n\n/**\n* @name isNegativeZerof\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-negative-zerof}\n*/\nsetReadOnly( ns, 'isNegativeZerof', require( '@stdlib/math-base-assert-is-negative-zerof' ) );\n\n/**\n* @name isNonNegativeFinite\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-nonnegative-finite}\n*/\nsetReadOnly( ns, 'isNonNegativeFinite', require( '@stdlib/math-base-assert-is-nonnegative-finite' ) );\n\n/**\n* @name isNonNegativeInteger\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-nonnegative-integer}\n*/\nsetReadOnly( ns, 'isNonNegativeInteger', require( '@stdlib/math-base-assert-is-nonnegative-integer' ) );\n\n/**\n* @name isNonnegativeIntegerf\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-nonnegative-integerf}\n*/\nsetReadOnly( ns, 'isNonnegativeIntegerf', require( '@stdlib/math-base-assert-is-nonnegative-integerf' ) );\n\n/**\n* @name isNonPositiveFinite\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-nonpositive-finite}\n*/\nsetReadOnly( ns, 'isNonPositiveFinite', require( '@stdlib/math-base-assert-is-nonpositive-finite' ) );\n\n/**\n* @name isNonPositiveInteger\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-nonpositive-integer}\n*/\nsetReadOnly( ns, 'isNonPositiveInteger', require( '@stdlib/math-base-assert-is-nonpositive-integer' ) );\n\n/**\n* @name isOdd\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-odd}\n*/\nsetReadOnly( ns, 'isOdd', require( '@stdlib/math-base-assert-is-odd' ) );\n\n/**\n* @name isOddf\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-oddf}\n*/\nsetReadOnly( ns, 'isOddf', require( '@stdlib/math-base-assert-is-oddf' ) );\n\n/**\n* @name isPositiveFinite\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-positive-finite}\n*/\nsetReadOnly( ns, 'isPositiveFinite', require( '@stdlib/math-base-assert-is-positive-finite' ) );\n\n/**\n* @name isPositiveInteger\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-positive-integer}\n*/\nsetReadOnly( ns, 'isPositiveInteger', require( '@stdlib/math-base-assert-is-positive-integer' ) );\n\n/**\n* @name isPositiveZero\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-positive-zero}\n*/\nsetReadOnly( ns, 'isPositiveZero', require( '@stdlib/math-base-assert-is-positive-zero' ) );\n\n/**\n* @name isPositiveZerof\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-positive-zerof}\n*/\nsetReadOnly( ns, 'isPositiveZerof', require( '@stdlib/math-base-assert-is-positive-zerof' ) );\n\n/**\n* @name isPrime\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-prime}\n*/\nsetReadOnly( ns, 'isPrime', require( '@stdlib/math-base-assert-is-prime' ) );\n\n/**\n* @name isProbability\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-probability}\n*/\nsetReadOnly( ns, 'isProbability', require( '@stdlib/math-base-assert-is-probability' ) );\n\n/**\n* @name isProbabilityf\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-probabilityf}\n*/\nsetReadOnly( ns, 'isProbabilityf', require( '@stdlib/math-base-assert-is-probabilityf' ) );\n\n/**\n* @name isSafeInteger\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/is-safe-integer}\n*/\nsetReadOnly( ns, 'isSafeInteger', require( '@stdlib/math-base-assert-is-safe-integer' ) );\n\n/**\n* @name isPow2Uint32\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/assert/uint32-is-pow2}\n*/\nsetReadOnly( ns, 'isPow2Uint32', require( '@stdlib/math-base-assert-uint32-is-pow2' ) );\n\n\n// EXPORTS //\n\nmodule.exports = ns;\n"],
  "mappings": "aA0BA,IAAIA,EAAc,QAAS,yCAA0C,EAUjEC,EAAK,CAAC,EASVD,EAAaC,EAAI,cAAe,QAAS,wCAAyC,CAAE,EASpFD,EAAaC,EAAI,aAAc,QAAS,uCAAwC,CAAE,EASlFD,EAAaC,EAAI,cAAe,QAAS,uCAAwC,CAAE,EASnFD,EAAaC,EAAI,YAAa,QAAS,qCAAsC,CAAE,EAS/ED,EAAaC,EAAI,SAAU,QAAS,kCAAmC,CAAE,EASzED,EAAaC,EAAI,UAAW,QAAS,mCAAoC,CAAE,EAS3ED,EAAaC,EAAI,WAAY,QAAS,oCAAqC,CAAE,EAS7ED,EAAaC,EAAI,YAAa,QAAS,qCAAsC,CAAE,EAS/ED,EAAaC,EAAI,aAAc,QAAS,sCAAuC,CAAE,EASjFD,EAAaC,EAAI,cAAe,QAAS,uCAAwC,CAAE,EASnFD,EAAaC,EAAI,YAAa,QAAS,qCAAsC,CAAE,EAS/ED,EAAaC,EAAI,aAAc,QAAS,sCAAuC,CAAE,EASjFD,EAAaC,EAAI,QAAS,QAAS,iCAAkC,CAAE,EASvED,EAAaC,EAAI,SAAU,QAAS,kCAAmC,CAAE,EASzED,EAAaC,EAAI,mBAAoB,QAAS,6CAA8C,CAAE,EAS9FD,EAAaC,EAAI,oBAAqB,QAAS,8CAA+C,CAAE,EAShGD,EAAaC,EAAI,qBAAsB,QAAS,+CAAgD,CAAE,EASlGD,EAAaC,EAAI,iBAAkB,QAAS,2CAA4C,CAAE,EAS1FD,EAAaC,EAAI,kBAAmB,QAAS,4CAA6C,CAAE,EAS5FD,EAAaC,EAAI,sBAAuB,QAAS,gDAAiD,CAAE,EASpGD,EAAaC,EAAI,uBAAwB,QAAS,iDAAkD,CAAE,EAStGD,EAAaC,EAAI,wBAAyB,QAAS,kDAAmD,CAAE,EASxGD,EAAaC,EAAI,sBAAuB,QAAS,gDAAiD,CAAE,EASpGD,EAAaC,EAAI,uBAAwB,QAAS,iDAAkD,CAAE,EAStGD,EAAaC,EAAI,QAAS,QAAS,iCAAkC,CAAE,EASvED,EAAaC,EAAI,SAAU,QAAS,kCAAmC,CAAE,EASzED,EAAaC,EAAI,mBAAoB,QAAS,6CAA8C,CAAE,EAS9FD,EAAaC,EAAI,oBAAqB,QAAS,8CAA+C,CAAE,EAShGD,EAAaC,EAAI,iBAAkB,QAAS,2CAA4C,CAAE,EAS1FD,EAAaC,EAAI,kBAAmB,QAAS,4CAA6C,CAAE,EAS5FD,EAAaC,EAAI,UAAW,QAAS,mCAAoC,CAAE,EAS3ED,EAAaC,EAAI,gBAAiB,QAAS,yCAA0C,CAAE,EASvFD,EAAaC,EAAI,iBAAkB,QAAS,0CAA2C,CAAE,EASzFD,EAAaC,EAAI,gBAAiB,QAAS,0CAA2C,CAAE,EASxFD,EAAaC,EAAI,eAAgB,QAAS,yCAA0C,CAAE,EAKtF,OAAO,QAAUA",
  "names": ["setReadOnly", "ns"]
}
